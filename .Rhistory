setwd("D:/GIS Files/amphiR/amphibians")
shiny::runApp()
runApp()
runApp()
runApp()
print (length(waterpoints))
# url of gsheet which contains form answers
url <- 'https://docs.google.com/spreadsheets/d/1rHUTv2m6N1cmx4gP0zwKxRBQok9Zr-FEBmf90Ksp7eU'
# creates dataframe from google sheet answers
dtf <- read.csv(text=gsheet2text(url, format='csv'), stringsAsFactors=FALSE,fileEncoding = "UTF-8",encoding = "UTF-8")
pools <- getPools(dtf)
forbidden <- getNoAccess(dtf)
incompletes <- getIncomplete(dtf)
impossibles <- getImpossibles(dtf)
completes <- getCompletes(dtf)
waterpoints <- getPoints()
# get rd of this line if it doesn't work
waterpoints = waterpoints[!waterpoints$OBJECTID %in% pools,]
waterpoints = waterpoints[!waterpoints$OBJECTID %in% forbidden,]
waterpoints = waterpoints[!waterpoints$OBJECTID %in% impossibles,]
print (length(waterpoints))
print (waterpoints)
# creates dataframe from google sheet answers
dtf <- read.csv(text=gsheet2text(url, format='csv'), stringsAsFactors=FALSE,fileEncoding = "UTF-8",encoding = "UTF-8")
pools <- getPools(dtf)
forbidden <- getNoAccess(dtf)
incompletes <- getIncomplete(dtf)
impossibles <- getImpossibles(dtf)
completes <- getCompletes(dtf)
waterpoints <- getPoints()
# get rd of this line if it doesn't work
waterpoints = waterpoints[!waterpoints$OBJECTID %in% pools,]
#waterpoints = waterpoints[!waterpoints$OBJECTID %in% forbidden,]
waterpoints = waterpoints[!waterpoints$OBJECTID %in% impossibles,]
print (waterpoints)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
reserveurl <- "https://docs.google.com/spreadsheets/d/1-9aMhycVqXRKXatoge41vxlHY2tHalr00P3u_L-s-ck/edit?usp=sharing"
reservedtf <- read.csv(text=gsheet2text(reserveurl, format='csv'), stringsAsFactors=FALSE,fileEncoding = "UTF-8",encoding = "UTF-8")
head(reservedtf)
runApp()
# forbidden <- getNoAccess(dtf)
incompletes <- getIncomplete(dtf) # assessment app code
# url of gsheet which contains form answers
url <- 'https://docs.google.com/spreadsheets/d/1rHUTv2m6N1cmx4gP0zwKxRBQok9Zr-FEBmf90Ksp7eU'
# creates dataframe from google sheet answers
dtf <- read.csv(text=gsheet2text(url, format='csv'), stringsAsFactors=FALSE,fileEncoding = "UTF-8",encoding = "UTF-8")
# forbidden <- getNoAccess(dtf)
incompletes <- getIncomplete(dtf) # assessment app code
incompletes
nos <- (dtf[which(dtf$Visita.finalitzada == "No"),2])
nos
reservedtf <- read.csv(text=gsheet2text(reserveurl, format='csv'), stringsAsFactors=FALSE,fileEncoding = "UTF-8",encoding = "UTF-8")
reservedtf
reserved    <- getReserved(reservedtf)
source("scripts/readgsheets.R",encoding = "Latin1")
reserved    <- getReserved(reservedtf)
reserved
runApp()
censusurl <- "https://docs.google.com/spreadsheets/d/1WBVlX_fYvf_EuFFo2Y-nruf2Du6e8_Jo-dFmxFsGxbU/edit?usp=sharing"
censusdtf <- read.csv(text=gsheet2text(censusurl, format='csv'), stringsAsFactors=FALSE,fileEncoding = "UTF-8",encoding = "UTF-8")
censussed   <- getCensussed(censusdtf)
source("scripts/readgsheets.R",encoding = "Latin1")
censussed   <- getCensussed(censusdtf)
source("scripts/readgsheets.R",encoding = "Latin1")
censussed   <- getCensussed(censusdtf)
censussed
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
